{"version":3,"sources":["State/BasketSlice.js","Components/ProductCard.js","Components/ProgressBar.js","Components/ProductCategories/OnePiece.js","Components/ProductCategories/Electronics.js","Components/Cart/CartProduct.js","Components/Cart/Cart.js","Components/Navbar.js","Components/Footer.js","Pages/About.js","Pages/Careers.js","Components/HomeContents/HomeContent.js","Pages/Home.js","App.js","State/Store.js","index.js"],"names":["Slice","createSlice","name","initialState","products","reducers","addProduct","state","action","payload","console","log","count","newObj","removeProduct","emptyBasket","selectBasket","basket","actions","ProductCardWrapper","styled","div","ImageWrapper","StyledImage","img","ProductDetails","ProductName","ProductPrice","StyledButton","button","ProductCard","price","imageUrl","useSelector","dispatch","useDispatch","productData","toString","replace","className","src","alt","onClick","ProgressBarText","imageKeyframes","keyframes","ProgressBarImage","ProgressBarWrapper","ProgressBar","ProductsWrapper","FilterSection","FilterButton","FilteringDiv","isFiltering","css","FilterInstanceWrapper","FilterInstanceTitle","FilterInstanceBody","ButtonWrapper","OnePiece","useState","totalData","setTotalData","crew","setCrew","sorting","setSorting","filtering","setFiltering","useEffect","isApiSubscribed","a","axios","get","getCrews","data","getOpData","changeFiltering","handleCrewChange","e","id","target","changeSorting","map","product","index","key","image","style","padding","onChange","type","htmlFor","descendingOrder","sort","b","ascendingOrder","Electronics","brand","setBrand","currentUrl","getElectronics","getElectronicsData","handleBrandChange","ProductFirstPart","BasketProductCountController","BasketProductCount","BasketProductCountWrapper","BasketProductWrapper","CartProduct","totalPrice","parseFloat","toFixed","data-testid","ProductsInBasket","CartWrapper","isOpen","Overlay","Cart","isCartOpen","changeCartStatus","basketArray","Object","values","totalCheckout","reduce","acc","curr","TitleWrapper","Link","NavbarWrapper","LinksWrapper","isOnMobile","ListElement","BarsWrapper","CloseButton","Navbar","setIsCartOpen","setIsOnMobile","handleResize","window","innerWidth","addEventListener","removeEventListener","onMobile","to","FooterWrapper","LinkWrapper","GithubLink","Footer","href","StyledP","p","About","StyledPosition","StyledPositionTitle","Careers","HomeContentOnePiece","HomeContentWrapper","StyledTitle","StyledLinkWrapper","StyledLink","HomeContentElectronics","ElectroStyledTitle","ElectroStyledLink","Home","App","path","element","Store","configureStore","reducer","basketReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b5d11b84.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nexport const Slice = createSlice({\n    name:\"basket\",\n    initialState:{\n        products:{ }\n    },\n    reducers:{\n        //add product to redux store with its name\n        addProduct : (state,action)=>{\n            const payload = action.payload;\n            //look at the added thing again!!\n            console.log(\"payload, \", payload)\n            if(state.products[payload.name]){\n                state.products[payload.name].count+=1\n            }\n            else{\n                const newObj = {...payload,count:1};\n                state.products[payload.name] = newObj;\n\n            }\n        },\n        //remove product \n        removeProduct : (state,action)=>{\n            let payload = action.payload;\n            console.log(\"remove product payload\", payload)\n            if(state.products[payload.name].count > 1){\n                state.products[payload.name].count-=1\n            }\n            else{\n                delete state.products[payload.name]\n            }\n        },\n        emptyBasket : (state) =>{\n            state.products={}\n        }\n    }\n})\nexport const selectBasket = (state) => state.basket.products;\nexport const {addProduct,removeProduct,emptyBasket} = Slice.actions;\nexport default Slice.reducer;","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBasket, addProduct } from '../State/BasketSlice';\n\n//ProductCard components get the necessary data as props and render accordingly.\nconst ProductCard = ({ name, price, imageUrl }) => {\n\n    const basket = useSelector(selectBasket);\n    const dispatch = useDispatch();\n    const productData = {\n        name, price, imageUrl\n    }\n    const addProductHandler = () => {\n        if (price !== \"unknown\") {\n            dispatch(addProduct(productData));\n            console.log(basket);\n        }\n    }\n    //numberWithCommas is a utility function to represent big numbers with commas between them.\n    //Here is the source: https://stackoverflow.com/a/2901298\n    function numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n    price = numberWithCommas(price);\n    return (\n        <ProductCardWrapper className=\"grey\">\n            <ImageWrapper>\n                <StyledImage src={imageUrl} alt=\"product-image\" />\n            </ImageWrapper>\n            <ProductDetails>\n                <ProductName>{name}</ProductName>\n                <ProductPrice>${price}</ProductPrice>\n            </ProductDetails>\n            <StyledButton className=\"holyPink\" onClick={addProductHandler}>Add to cart</StyledButton>\n        </ProductCardWrapper>\n    )\n}\n\nconst ProductCardWrapper = styled.div`\nwidth:22.5rem;\nmargin:auto;\ndisplay:flex;\nflex-flow:column nowrap;\nalign-items: center;\npadding:0.5rem;\nborder-radius:1rem;\nheight:26rem;\nmargin:1rem;\n\ntransition:transform .5s;\n&:hover{\n    transform:scale(1.015);\n}\n\n`\nconst ImageWrapper = styled.div`\nwidth:100%;\npadding:0.25rem;\ndisplay: flex;\nflex-flow:column nowrap;\nheight:16rem;\n`\nconst StyledImage = styled.img`\nwidth:100%;\nheight:100%;\nobject-fit: contain;\n`\nconst ProductDetails = styled.div`\npadding:0.5rem;\nheight:7rem\n`\nconst ProductName = styled.div`\npadding:0.5rem;\nfont-size:1.5rem;\nfont-weight:700;\ntext-align:center;\ncolor:black;\n\n`\nconst ProductPrice = styled.div`\npadding:0.5rem;\nfont-size: 1rem;\ntext-align:center;\ncolor:black;\n`\nconst StyledButton = styled.button`\npadding:0.5rem;\nborder-radius: 0.25rem;\nmargin-right:2rem;\nmargin-left:2rem;\ncolor:white;\nbackground-color: rgb(204, 114, 200);\nfont-weight: 600;\nfont-size:1.125rem;\nheight:2.5rem;\n\n`\nexport default ProductCard;\n","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nconst ProgressBar = () => {\n    return (\n        <ProgressBarWrapper>\n            <ProgressBarText>\n                Data is loading ...\n            </ProgressBarText>\n        <ProgressBarImage src=\"https://i.ibb.co/60JfMFf/chopper.png\" />\n        </ProgressBarWrapper>\n    )\n}\n\nconst ProgressBarText = styled.div`\nfont-size:1.5rem;\npadding:1rem;\n`\nconst imageKeyframes = keyframes`\nfrom{\n    transform:rotate(0deg);\n}\nto{\n    transform:rotate(360deg)\n}\n\n`\nconst ProgressBarImage = styled.img`\nwidth:9rem;\nheight:9rem;\nobject-fit:cover;\nborder-radius: 50%;\n\nanimation:${imageKeyframes} 3.25s linear infinite;\n\n`\nconst ProgressBarWrapper = styled.div`\ndisplay:flex;\nflex-flow:column nowrap;\njustify-content: center;\nalign-items:center;\nmin-height:60vh;\n`\n\nexport default ProgressBar;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProductCard from '../ProductCard';\nimport styled, { css } from 'styled-components';\nimport { ImCross } from \"react-icons/im\";\nimport { FaSave } from 'react-icons/fa';\nimport ProgressBar from '../ProgressBar';\n\n/*\nThe OnePiece component fetches the data from the API, displays the products in ProductCard components.\n*/\nconst OnePiece = () => {\n    /*\n    -totalData stores the products as an array.\n    -crew state is used for filtering by crews. when we choose a crew from filters, we update this state and since useEffect tracks it, \n    in useEffect hook, we get the right data for a crew using data[crew] syntax.\n    -sorting is used for price filtering, it may be \"highToLow\" or \"lowToHigh\".\n    -filtering is a boolean state to decide whether to show filters or not. filter part has z-index:1, so they are on top of the ui, so when this is \n    false, we display:none the filters.\n    */\n    const [totalData, setTotalData] = useState('');\n    const [crew, setCrew] = useState('straw-hat-pirates');\n    const [sorting, setSorting] = useState('');\n    const [filtering, setFiltering] = useState(false);\n\n    useEffect(() => {\n        let isApiSubscribed = true;\n        const getOpData = async () => {\n            if (isApiSubscribed) {\n                const getCrews = await axios.get('https://fierce-taiga-45635.herokuapp.com/crews');\n                let data = getCrews.data;\n                data = data[crew];\n                // console.log(\"data\", data);\n                setTotalData(data);\n            }\n        }\n        getOpData();\n        return () => {\n            isApiSubscribed = false;\n        }\n    }, [crew])\n\n    const changeFiltering = () => {\n        if (filtering === false) {\n            //console.log(\"filter was false, now it should be true\");\n            setFiltering(true)\n        }\n        else {\n            //console.log(\"filter was true, now it should be false\")\n            setFiltering(false)\n        }\n    }\n\n    const handleCrewChange = (e) => {\n        const id = e.target.id;\n        //const checked = e.target.checked;\n        // console.log(\"name: \", id, \"checked \", checked);\n        setCrew(id)\n    }\n\n    const changeSorting = (e) => {\n        const id = e.target.id;\n        //console.log(\"id\", id);\n        setSorting(id);\n\n    }\n    const saveFilters = () => {\n        // console.log(\"we are trying to save the filters\", sorting)\n        if (sorting === \"highToLow\") {\n            // console.log(\"it should be descending\");\n            const descendingOrder = totalData.sort((a, b) => b.price - a.price);\n            // console.log(descendingOrder);\n            setTotalData(descendingOrder)\n        }\n        else {\n            //console.log(\"it should be ascending\");\n            const ascendingOrder = totalData.sort((a, b) => a.price - b.price);\n            // console.log(ascendingOrder);\n            setTotalData(ascendingOrder)\n        }\n        setFiltering(false)\n    }\n\n    return (\n        <div>\n\n            <FilterSection>\n                <FilterButton className=\"holyPink\" onClick={changeFiltering}>Filter</FilterButton>\n            </FilterSection>\n            <ProductsWrapper>\n                {totalData\n                    ? totalData.map((product, index) =>\n                        <ProductCard key={index} name={product.name} price={product.price} imageUrl={product.image} />)\n                    : <ProgressBar />\n                }\n            </ProductsWrapper>\n            <FilteringDiv isFiltering={filtering}>\n                <FilterInstanceWrapper>\n                    <FilterInstanceTitle>Sort by price</FilterInstanceTitle>\n                    <FilterInstanceBody>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={changeSorting} type=\"radio\" id=\"lowToHigh\" name=\"radio\" />\n                            <label htmlFor=\"lowToHigh\"> Low to high</label> <br />\n                        </div>\n                        <div onChange={changeSorting} style={{ padding: \"0.5rem\" }}>\n                            <input type=\"radio\" id=\"highToLow\" name=\"radio\" />\n                            <label htmlFor=\"highToLow\"> High to low</label> <br />\n                        </div>\n\n                    </FilterInstanceBody>\n                </FilterInstanceWrapper>\n                <FilterInstanceWrapper>\n                    <FilterInstanceTitle>Crew</FilterInstanceTitle>\n                    <FilterInstanceBody>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleCrewChange} type=\"radio\" id=\"straw-hat-pirates\" name=\"pirates\" />\n                            <label htmlFor=\"straw-hat-pirates\"> Straw Hat Pirates</label> <br />\n                        </div>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleCrewChange} type=\"radio\" id=\"whitebeard-pirates\" name=\"pirates\" />\n                            <label htmlFor=\"whitebeard-pirates\"> Whitebeard Pirates</label> <br />\n                        </div>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleCrewChange} type=\"radio\" id=\"roger-pirates\" name=\"pirates\" />\n                            <label htmlFor=\"roger-pirates\"> Roger Pirates</label> <br />\n                        </div>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleCrewChange} type=\"radio\" id=\"big-mom-pirates\" name=\"pirates\" />\n                            <label htmlFor=\"big-mom-pirates\"> Big Mom Pirates</label> <br />\n                        </div>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleCrewChange} type=\"radio\" id=\"red-hair-pirates\" name=\"pirates\" />\n                            <label htmlFor=\"red-hair-pirates\"> Red Hair Pirates</label> <br />\n                        </div>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleCrewChange} type=\"radio\" id=\"beast-pirates\" name=\"pirates\" />\n                            <label htmlFor=\"beast-pirates\"> Beast Pirates</label> <br />\n                        </div>\n\n                    </FilterInstanceBody>\n                </FilterInstanceWrapper>\n                <ButtonWrapper>\n                    <StyledButton onClick={saveFilters} ><FaSave /> </StyledButton>\n                    <StyledButton onClick={changeFiltering} ><ImCross /> </StyledButton>\n\n                </ButtonWrapper>\n\n            </FilteringDiv>\n\n\n        </div>\n    )\n}\nconst ProductsWrapper = styled.div`\npadding:2rem;\ndisplay:flex;\nflex-flow:row wrap;\njustify-content: space-evenly;\n`\n\nconst FilterSection = styled.div`\npadding:0.5rem;\n`\nconst FilterButton = styled.button`\nwidth:18rem;\nheight:2rem;\nmargin:1rem;\ncolor:black;\nfont-size: 1.5rem;\nborder-radius: 0.5rem;\n@media (max-width:480px){\n    width:60%;\n    margin-left:20%;\n}\n`\nconst FilteringDiv = styled.div`\ndisplay:none;\nwidth:25rem;\nheight:100%;\n\nbackground-color: pink;\npadding:1rem;\n\n${({ isFiltering }) =>\n        isFiltering && css`\nposition: fixed;\ntop:0;\nleft:0;\nz-index:10;\ndisplay:flex;\njustify-content: space-around;\nflex-flow:column nowrap;\n@media (max-width:480px){\n    width:100%\n}\n\n`}\n`\nconst FilterInstanceWrapper = styled.div`\nwidth:70%;\nmargin-left:15%;\npadding:1rem;\nborder-radius:0.5rem;\nborder:2px solid grey;\nbackground-color: white;\nmargin-bottom:1rem;\n`\nconst FilterInstanceTitle = styled.div`\nfont-size:1.25rem;\ntext-align:center;\n`\nconst FilterInstanceBody = styled.div`\npadding:1rem;\ndisplay:flex;\nflex-flow:column nowrap;\njustify-content: space-evenly;\n`\nconst StyledButton = styled.button`\nfont-size:1.5rem;\nfont-weight: 300;\ntext-align:center;\ncolor:white;\n`\nconst ButtonWrapper = styled.div`\ndisplay:flex;\nflex-flow:row nowrap;\njustify-content: space-evenly;\n`\n\n\nexport default OnePiece\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProductCard from '../ProductCard';\nimport styled, { css } from 'styled-components';\nimport { ImCross } from \"react-icons/im\";\nimport { FaSave } from 'react-icons/fa';\nimport ProgressBar from '../ProgressBar';\n/*\nThe electronics component fetches the data from the API, displays the products in ProductCard components.\n*/\nconst Electronics = () => {\n\n    /*\n    -totalData stores the products as an array.\n    -brand state is used for filtering by brands. when we choose a brand from filters, we update this state and since useEffect tracks it, \n    in useEffect hook, we use URL queries to get right brand products.\n    -sorting is used for price filtering, it may be \"highToLow\" or \"lowToHigh\".\n    -filtering is a boolean state to decide whether to show filters or not. filter part has z-index:1, so they are on top of the ui, so when this is \n    false, we display:none the filters.\n     */\n    const [totalData, setTotalData] = useState('');\n    const [brand, setBrand] = useState('Apple');\n    const [sorting, setSorting] = useState('');\n    const [filtering, setFiltering] = useState(false);\n\n    useEffect(() => {\n        let isApiSubscribed = true;\n        const getElectronicsData = async () => {\n            const baseUrl = 'https://fierce-taiga-45635.herokuapp.com/electronics';\n            const currentUrl = baseUrl + `?brand=${brand}`;\n            if (isApiSubscribed) {\n                const getElectronics = await axios.get(currentUrl);\n                let data = getElectronics.data;\n                //console.log(\"data of electronics\", data);\n                setTotalData(data);\n            }\n        }\n        getElectronicsData();\n        return () => {\n            isApiSubscribed = false;\n        }\n    }, [brand])\n\n    const changeFiltering = () => {\n        if (filtering === false) {\n            //console.log(\"filter was false, now it should be true\");\n            setFiltering(true)\n        }\n        else {\n            // console.log(\"filter was true, now it should be false\")\n            setFiltering(false)\n        }\n    }\n\n    const handleBrandChange = (e) => {\n        const id = e.target.id;\n        //const checked = e.target.checked;\n        //console.log(\"name: \", id, \"checked \", checked);\n        setBrand(id)\n    }\n\n    const changeSorting = (e) => {\n        const id = e.target.id;\n        // console.log(\"id\", id);\n        setSorting(id);\n\n    }\n    const saveFilters = () => {\n        //console.log(\"we are trying to save the filters\", sorting)\n        if (sorting === \"highToLow\") {\n            // console.log(\"it should be descending\");\n            const descendingOrder = totalData.sort((a, b) => b.price - a.price);\n            // console.log(descendingOrder);\n            setTotalData(descendingOrder)\n        }\n        else {\n            // console.log(\"it should be ascending\");\n            const ascendingOrder = totalData.sort((a, b) => a.price - b.price);\n            //  console.log(ascendingOrder);\n            setTotalData(ascendingOrder)\n        }\n        setFiltering(false)\n    }\n    return (\n        <div>\n            <FilterSection>\n                <FilterButton className=\"holyPink\" onClick={changeFiltering}>Filter</FilterButton>\n            </FilterSection>\n            <ProductsWrapper>\n                {totalData\n                    ? totalData.map((product, index) =>\n                        <ProductCard key={index} name={product.name} price={product.price} imageUrl={product.image} />)\n                    : <ProgressBar />}\n            </ProductsWrapper>\n            <FilteringDiv isFiltering={filtering}>\n                <FilterInstanceWrapper>\n                    <FilterInstanceTitle>Sort by price</FilterInstanceTitle>\n                    <FilterInstanceBody>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={changeSorting} type=\"radio\" id=\"lowToHigh\" name=\"radio\" />\n                            <label htmlFor=\"lowToHigh\"> Low to high</label> <br />\n                        </div>\n                        <div onChange={changeSorting} style={{ padding: \"0.5rem\" }}>\n                            <input type=\"radio\" id=\"highToLow\" name=\"radio\" />\n                            <label htmlFor=\"highToLow\"> High to low</label> <br />\n                        </div>\n\n                    </FilterInstanceBody>\n                </FilterInstanceWrapper>\n                <FilterInstanceWrapper>\n                    <FilterInstanceTitle>Brand</FilterInstanceTitle>\n                    <FilterInstanceBody>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleBrandChange} type=\"radio\" id=\"Apple\" name=\"electronics\" />\n                            <label htmlFor=\"Apple\"> Apple</label> <br />\n                        </div>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleBrandChange} type=\"radio\" id=\"Tesla\" name=\"electronics\" />\n                            <label htmlFor=\"Tesla\"> Tesla</label> <br />\n                        </div>\n                        <div style={{ padding: \"0.5rem\" }}>\n                            <input onChange={handleBrandChange} type=\"radio\" id=\"SpaceX\" name=\"electronics\" />\n                            <label htmlFor=\"SpaceX\"> SpaceX</label> <br />\n                        </div>\n\n\n                    </FilterInstanceBody>\n                </FilterInstanceWrapper>\n                <ButtonWrapper>\n                    <StyledButton onClick={saveFilters} ><FaSave /> </StyledButton>\n                    <StyledButton onClick={changeFiltering} ><ImCross /> </StyledButton>\n\n                </ButtonWrapper>\n\n            </FilteringDiv>\n\n        </div>\n    )\n}\nconst ProductsWrapper = styled.div`\npadding:2rem;\ndisplay:flex;\nflex-flow:row wrap;\njustify-content: space-evenly;\n`\n\nconst FilterSection = styled.div`\npadding:0.5rem;\n`\nconst FilterButton = styled.button`\nwidth:18rem;\nheight:2rem;\nmargin:1rem;\ncolor:black;\nfont-size: 1.5rem;\nborder-radius: 0.5rem;\n@media (max-width:480px){\n    width:60%;\n    margin-left:20%;\n}\n`\nconst FilteringDiv = styled.div`\ndisplay:none;\nwidth:25rem;\nheight:100%;\n\nbackground-color: pink;\npadding:1rem;\n\n${({ isFiltering }) =>\n        isFiltering && css`\nposition: fixed;\ntop:0;\nleft:0;\nz-index:10;\ndisplay:flex;\njustify-content: space-around;\nflex-flow:column nowrap;\n@media (max-width:480px){\n    width:100%\n}\n\n`}\n`\nconst FilterInstanceWrapper = styled.div`\nwidth:70%;\nmargin-left:15%;\npadding:1rem;\nborder-radius:0.5rem;\nborder:2px solid grey;\nbackground-color: white;\nmargin-bottom:1rem;\n`\nconst FilterInstanceTitle = styled.div`\nfont-size:1.25rem;\ntext-align:center;\n`\nconst FilterInstanceBody = styled.div`\npadding:1rem;\ndisplay:flex;\nflex-flow:column nowrap;\njustify-content: space-evenly;\n`\nconst StyledButton = styled.button`\nfont-size:1.5rem;\nfont-weight: 300;\ntext-align:center;\ncolor:white;\n`\nconst ButtonWrapper = styled.div`\ndisplay:flex;\nflex-flow:row nowrap;\njustify-content: space-evenly;\n`\n\n\nexport default Electronics\n","import React from 'react';\nimport styled from 'styled-components';\nimport { addProduct, removeProduct } from '../../State/BasketSlice';\nimport { FaMinus, FaPlus } from 'react-icons/fa';\n\n//CartProduct is the component we use to represent each product in cart. \nconst CartProduct = ({ productData, dispatch }) => {\n  //Calculate the total price for this product. Since a product's count may be more than 1, we multiply the product's price with the count \n  let totalPrice = (parseFloat(productData.price) * productData.count).toFixed(2);\n\n  const addProductController = () => {\n    dispatch(addProduct(productData))\n  }\n  const removeProductController = () => {\n    dispatch(removeProduct(productData))\n  }\n\n  //numberWithCommas is a utility function to represent big numbers with commas between them.\n  //Here is the source: https://stackoverflow.com/a/2901298\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n  //totalPrice is the string with commas \n  totalPrice = numberWithCommas(totalPrice);\n  return (\n    <BasketProductWrapper>\n      <ProductFirstPart>\n        {productData.name}\n        <ProductPrice data-testid=\"price\">$ {totalPrice}</ProductPrice>\n      </ProductFirstPart>\n\n      <BasketProductCountWrapper>\n        <BasketProductCountController id=\"minus\" data-testid=\"minusButton\" onClick={removeProductController}><FaMinus /></BasketProductCountController>\n        <BasketProductCount>{productData.count}</BasketProductCount>\n        <BasketProductCountController id=\"plus\" data-testid=\"plusButton\" onClick={addProductController}><FaPlus /></BasketProductCountController>\n      </BasketProductCountWrapper>\n    </BasketProductWrapper>\n  )\n\n}\n/*\nFor styling, i used styled-components. Wrapped basket product, put the name and price inside a div,\nand created a count wrapper for manipulating the count of the product.\n\n*/\nconst ProductFirstPart = styled.div`\nwidth:14rem;\npadding:0.5rem;\ndisplay:flex;\nflex-flow:column nowrap;\n`\n\nconst ProductPrice = styled.div`\ncolor:black;\nfont-size: 1rem;\n`;\n\nconst BasketProductCountController = styled.button`\nwidth:2rem;\nheight:2rem;\ncolor:black;\n\n`;\nconst BasketProductCount = styled.div`\nbackground-color:black;\ntext-align:center;\ncolor:white;\nfont-size: large;\npadding:0.25rem;\nmin-width:2rem;\n/*max-width:4rem is here for numbers like 500,1000 */\nmax-width:4rem;\nheight:2rem;\n`;\n\nconst BasketProductCountWrapper = styled.div`\ndisplay:flex;\njustify-content: space-evenly;\nflex-flow:row nowrap;\nalign-items:center;\nwidth:40%;\nflex-flow:row nowrap;\n`;\n\nconst BasketProductWrapper = styled.div`\ndisplay:flex;\nflex-flow:row nowrap;\nborder:0.25rem solid pink;\njustify-content: space-evenly;\nborder-radius: 0.5rem;;\npadding:1rem;\nwidth:100%;\nmargin:1rem 0 1rem 0;\n`;\n\n//export the CartProduct component to use it inside Cart component.\nexport default CartProduct;","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBasket, emptyBasket } from '../../State/BasketSlice';\nimport { ImCross } from \"react-icons/im\";\nimport CartProduct from './CartProduct';\n\n/*We access our cart from navbar, so we get isCartOpen boolean and changeCartStatus function as our props.\nThese props are passed by the Navbar component which uses a bars/dropdown style for smaller screens.\n\nAs for the Cart component, we have a little animation and also an overlay at the left. When the cart is open, \nthere's a black (not fully opaque) overlay at the left and the overlay closes the cart when clicked on.\n\n*/\nconst Cart = ({ isCartOpen, changeCartStatus }) => {\n  // console.log(\"changeCartStatus \", changeCartStatus)\n  const basket = useSelector(selectBasket);\n  const basketArray = Object.values(basket);\n  const dispatch = useDispatch()\n  //get basket, basketArray and dispatch \n\n  //totalPrice is a utility function\n  const totalPrice = (price, count) => {\n    return (parseFloat(price) * count);\n  }\n\n  //Calculate totalCheckout price for a basket\n  let totalCheckout = basketArray.reduce((acc, curr) => {\n    return acc + totalPrice(curr.price, curr.count)\n  }, 0).toFixed(2);\n\n  //numberWithCommas is a utility function to represent big numbers with commas between them.\n  //Here is the source: https://stackoverflow.com/a/2901298\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n  totalCheckout = numberWithCommas(totalCheckout);\n\n  return (\n    <div>\n      {/*\n      Pass the isCartOpen boolean as a prop. We'll display:none when the cart is not open.\n      */}\n      <CartWrapper className=\"holyPink\" isOpen={isCartOpen}>\n        <ProductsInBasket>\n          {basketArray.map((product, index) => {\n            return (\n              <div>\n                <CartProduct key={index} productData={product} dispatch={dispatch}/>\n              </div>\n            )\n          })}\n\n        </ProductsInBasket> \n        <ButtonWrapper>\n          {/*\n          Empty basket simply empties the basket in redux store.\n          changeCartStatus updates the isCartOpen data (this data is a state in Navbar) . changeCartStatus is \n          a function in Navbar and it updates the state.\n          */}\n          <StyledButton onClick={() => dispatch(emptyBasket())}> Checkout </StyledButton>\n          <StyledButton onClick={() => changeCartStatus()} ><ImCross /> </StyledButton>\n        </ButtonWrapper>\n        <div>{totalCheckout}</div>\n      </CartWrapper>\n      <Overlay isOpen={isCartOpen} onClick={() => changeCartStatus()}></Overlay>\n\n    </div>\n  )\n}\nconst StyledButton = styled.button`\nfont-size:1.5rem;\nfont-weight: 300;\ntext-align:center;\ncolor:white;\n`\nconst ButtonWrapper = styled.div`\ndisplay:flex;\nflex-flow:row nowrap;\njustify-content: space-evenly;\nwidth:100%;\npadding:1rem;\n`\nconst ProductsInBasket = styled.div`\nmin-height:30rem;\nheight:40rem;\noverflow-y: scroll;\noverflow-x: hidden;\nmargin:0;\npadding:1rem;\nwidth:100%;\n\n::-webkit-scrollbar {\n  width: 0.5rem;\n \n}\n::-webkit-scrollbar-track {\n  background:inherit; \n}\n\n::-webkit-scrollbar-thumb {\n  background: #858181; \n  height:4rem;\n  border-radius:0.5rem;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n`;\n\nconst CartWrapper = styled.div`\n/*\nThe cart is normally not visible (because of right:-100%). It has a fixed position.\nWhen isOpen prop is true, we set right:0 and now the cart is visible and has a z-index:1 , it's on top of the ui.\n*/\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  right: -100%;\n  display: flex;\n  flex-flow:column nowrap;\n  align-items: center;\n  width: 30rem;\n  height: 100%;\n  font-size: 2rem;\n  transition: right 0.85s ease-in-out;\n\n  ${({ isOpen }) =>\n    isOpen && css`\n  right:0;\n  `\n  }\n  @media (max-width:480px){\n      width:100%;\n  }\n`\n\nconst Overlay = styled.div`\n  /*\n  Similar to CartWrapper, this has fixed positioning and also when the cart is open, overlay covers all \n  of the left part. When the user doesn't click to the Cart's internal exit button, they can easily click \n  overlay to close the cart.\n  */\n  position: fixed;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background-color: black;\n  opacity: 0.9;\n  transition: left 0.85s ease-in-out;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    css`\n      left: 0;\n    `}\n`\n\nexport default Cart\n","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components'\nimport { FaBars, FaShoppingBag } from 'react-icons/fa'\nimport { ImCross } from \"react-icons/im\";\nimport { Cart } from './Cart'\nimport { Link } from 'react-router-dom';\nimport '../globalStyle.scss'\n\nconst Navbar = () => {\n    /*\n    isCartOpen state is passed onto Cart component. This state is useful\n    because when the value is false, cart's display will be none.\n    \n    isOnMobile state is used for dropdown menu in smaller screens.\n    And also some css is adapted based on screen size, and they got that\n    data from isOnMobile.\n    */\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [isOnMobile, setIsOnMobile] = useState(false);\n    const changeCartStatus = () => {\n        if (isCartOpen === false) setIsCartOpen(true)\n        else setIsCartOpen(false)\n\n    }\n    useEffect(() => {\n        /*Check the screen size on every render, prevent possible bugs by\n        checking the screen size and setting the isOnMobile when necessary.\n        */\n        function handleResize() {\n            if (window.innerWidth >= 800) {\n                console.log(\"now bigger than 800\")\n                setIsOnMobile(false);\n            }\n        }\n        handleResize();\n        window.addEventListener(\"resize\", handleResize);\n\n        //Cleanup the useEffect when the component unmounts\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    //onMobile function changes the isOnMobile. This data is used in small screen\n    //dropdown.\n    const onMobile = () => {\n        if (isOnMobile) setIsOnMobile(false)\n        else setIsOnMobile(true)\n        //console.log(\"changed the mobile now\")\n\n    }\n    return (\n        <>\n            <NavbarWrapper className=\"grey\">\n                <TitleWrapper to=\"/\">Cool Shop</TitleWrapper>\n                <LinksWrapper className=\"grey\" isOnMobile={isOnMobile}>\n                    <ListElement to=\"/electronics\">Electronics</ListElement>\n                    <ListElement to=\"/onepiece\">One Piece</ListElement>\n                    <ListElement to=\"about\">About</ListElement>\n                    <ButtonWrapper onClick={changeCartStatus}> <FaShoppingBag /> Cart</ButtonWrapper>\n                    <CloseButton onClick={onMobile} isOnMobile={isOnMobile}><ImCross /> </CloseButton>\n                </LinksWrapper>\n                <BarsWrapper onClick={onMobile}>\n                    <FaBars />\n                </BarsWrapper>\n\n            </NavbarWrapper>\n            <Cart isCartOpen={isCartOpen} changeCartStatus={changeCartStatus} />\n        </>\n    )\n}\nconst TitleWrapper = styled(Link)`\nwidth:75%;\ntext-decoration:none;\nheight:100%;\nfont-size: 2rem;\nfont-weight: bolder;\ntext-align:center;\npadding:1rem;\ncolor:black;\n@media only screen and (min-width:800px){\nwidth:40%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n\n`\nconst NavbarWrapper = styled.div`\nborder: 10px solid;\nborder-image-slice: 1;\nborder-width: 0.4rem;\nborder-image-source: linear-gradient(to left, #743ad5, #d53a9d);\nheight:5rem;\ndisplay: flex;\nflex-flow:row nowrap;\njustify-content: space-evenly;\nalign-items: center;\n@media only screen and (min-width:800px){\nheight:7rem;\n}\n`;\nconst LinksWrapper = styled.div`\ndisplay:none;\nwidth:50%;\n${({ isOnMobile }) =>\n        isOnMobile && css`\nposition: absolute;\ndisplay: flex;\nright:0;\ntop:5rem;\nz-index:1;\nflex-flow:column nowrap;\njustify-content: space-evenly;\nheight:30rem;\nborder:4px solid black;\n@media only screen and (max-width:500px){\n    width:100%;\n}\n`\n    }\n ${({ isOnMobile }) =>\n        !isOnMobile && css`\n@media only screen and (min-width:800px){\n    display:flex;\n    flex-flow:row nowrap;\n    justify-content: space-evenly;\n\n}\n`}\n`\nconst ListElement = styled(Link)`\nlist-style: none;\ntext-decoration:none;\nfont-size:1.25rem;\nfont-weight: 400;\npadding:0.25rem;\ncolor:black;\n@media only screen and (max-width:800px){\nborder:3px solid rgb(88, 88, 88);\npadding:1rem;\ntext-align:center;\nmargin-left:3rem;\nmargin-right:3rem;\nborder-radius: 10px;\n}\n\n`\nconst BarsWrapper = styled.button`\nwidth:10%;\ntext-align: center;\nfont-size: 1.35rem;\n@media only screen and (min-width:800px){\n    display:none;\n}\n\n`\nconst ButtonWrapper = styled.button`\nfont-size:1.5rem;\nfont-weight: 300;\n\n`\nconst CloseButton = styled(ButtonWrapper)`\ndisplay:none;\n${({ isOnMobile }) =>\n        isOnMobile && css`\ndisplay:block;\ntext-align:center;\n`}\n\n`\n\nexport default Navbar;\n","import React from 'react';\nimport styled from 'styled-components'\nimport {FaGithub} from 'react-icons/fa'\nimport {Link} from 'react-router-dom'\n\n//Footer component includes some links.\nconst Footer = () => {\n    return (\n        <div>\n            <FooterWrapper>\n                This shop only sells cool products.\n            <LinksWrapper>\n            <GithubLink href='https://github.com/rogerfavelron'><FaGithub/></GithubLink>\n            <LinkWrapper to=\"/careers\">Careers</LinkWrapper>\n            <LinkWrapper to=\"/about\">About</LinkWrapper>\n            </LinksWrapper>\n            </FooterWrapper>\n        </div>\n    )\n}\n\nconst FooterWrapper = styled.div`\npadding:1rem;\nbackground-color: #303030;\nmargin-top:1rem;\nmin-height:4rem;\nborder-radius:0.25rem;\ncolor:white;\ntext-align:center;\n\n`\nconst LinksWrapper = styled.div`\ndisplay:flex;\njustify-content: space-evenly;\nalign-items: center;\n`\nconst LinkWrapper = styled(Link)`\npadding:1rem;\nmargin:0.5rem;\nborder:3px solid pink;\nborder-radius: 0.25rem;\ntext-decoration: none;\ncolor:white;\nfont-size:1.5rem;\n`\nconst GithubLink = styled.a`\npadding:1rem;\nmargin:0.5rem;\nborder:3px solid pink;\nborder-radius: 0.25rem;\ntext-decoration: none;\ncolor:white;\nfont-size:1.5rem;\n`\nexport default Footer\n","import React from 'react';\nimport styled from 'styled-components';\n\n//about page\nconst About = () => {\n    return (\n        <div>\n            <StyledP>\n                This is Cool Shop. Coolest shop on earth.\n                We only sell cool products, no boring thing may \n                ever exist in our shop. \n                <br/>\n                <br/>\n                And let the adventure begin.\n                <StyledImage src=\"https://i.ibb.co/Jp4Q9DH/Screenshot-from-2021-02-09-17-38-26.png\" />\n            </StyledP>\n        </div>\n    )\n}\nconst StyledP = styled.p`\nwidth:100%;\npadding:2rem;\nfont-size:2rem;\nfont-weight:500;\nmin-height:70vh;\n\n`\nconst StyledImage = styled.img`\nborder-radius:0.6rem;\ndisplay:block;\nwidth:90%;\nmargin:auto;\nmargin-top:2rem;\n`\n\nexport default About\n","import React from 'react';\nimport styled from 'styled-components';\n\n//careers page\nconst Careers = () => {\n    return (\n        <div>\n            <StyledP>\n                Career at Cool Shop is everybody's dream . \n                Current open positions are listed below:\n                <br/>\n                <br/> \n                <StyledPosition className=\"grey\">\n                    <StyledPositionTitle className=\"grey\">\n                        Database Administrator\n                    </StyledPositionTitle>\n                     I need a person who can improve our database. For example,\n                     adding more one piece crews, improving existing crews \n                     or imroving electronics. The person should know how to \n                     use Github, how to publish an image on various image websites \n                     (imgur,imgbb etc). And that's all :)\n                     <br/>\n                     <br/>\n                     You can find my mail address in my github.\n\n                </StyledPosition>\n            </StyledP>\n        </div>\n    )\n}\nconst StyledP = styled.p`\nwidth:100%;\npadding:2rem;\nfont-size:2rem;\nfont-weight:500;\nmin-height:70vh;\n\n`\nconst StyledPosition= styled.div`\nborder-radius: 0.5rem;\npadding:1rem;\n`\nconst StyledPositionTitle= styled.div`\nborder-radius: 0.5rem;\npadding:0.5rem;\nfont-size:1.5rem;\nfont-weight: 600;\ncolor:purple;\n`\nexport default Careers\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom'\n\n/*\nIn the homepage, we see 2 home contents: One Piece & Electronics.\n*/\nexport const HomeContentOnePiece = () => {\n    return (\n        <HomeContentWrapper className=\"grey\">\n            <StyledTitle>\n                \"I'm gonna be the king of the pirates.\"\n            </StyledTitle>\n            <StyledImage src=\"https://i.ibb.co/Z2DV2MT/luffy.png\" />\n            <StyledLinkWrapper>\n                <StyledLink to=\"/onepiece\">View cool one piece posters</StyledLink>\n            </StyledLinkWrapper>\n        </HomeContentWrapper>\n    )\n}\n\n\nconst HomeContentWrapper = styled.div`\nborder:3px solid rgb(63, 63, 63);\nwidth:100%;\n//max-height:30rem;\nborder-radius:1rem;\npadding:1rem;\nmargin-top:1.5rem;\n@media only screen and (min-width:800px){\n    width:80%;\n    margin-left:10%;\n    margin-top:2.5rem;\n}\n@media only screen and (min-width:1200px){\n    width:60%;\n    margin-left:20%;\n    margin-top:4rem;\n}\n`\nconst StyledImage = styled.img`\nwidth:100%;\ndisplay:flex;\nflex-grow:1;\n//max-height:20rem;\nobject-fit: contain;\nmargin:auto;\ndisplay: block;\n\n`\nconst StyledTitle=styled.div`\nbackground-image: linear-gradient(to right,#2ea0b1,#7d4df2); \ncolor:white;\nfont-size:2.5rem;\npadding:1.5rem;\n`\nconst StyledLinkWrapper = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\nconst StyledLink = styled(Link)`\npadding:1rem;\nfont-size:1.1rem;\nfont-weight:600;\ntext-decoration:none;\ndisplay: flex;\nalign-items:center;\nbackground:-webkit-linear-gradient(45deg,#2ea0b1 20%,#7d4df2 80%);\nbackground-clip:text;\n-webkit-text-fill-color: transparent;\n`\nexport const HomeContentElectronics = () =>{\n    return (\n        <HomeContentWrapper className=\"grey\">\n            <ElectroStyledTitle>\n                Only. Cool. Electronics.\n            </ElectroStyledTitle>\n            <StyledImage src=\"https://i.ibb.co/2jc5PC2/macintosh.png\" />\n            <StyledLinkWrapper>\n                <ElectroStyledLink to=\"/electronics\">View cool electronics</ElectroStyledLink>\n            </StyledLinkWrapper>\n        </HomeContentWrapper>\n    )\n}\n\nconst ElectroStyledTitle = styled(StyledTitle)`\nfont-family:'Press Start 2P',cursive;\nfont-size:1.25rem;\ntext-align:center;\nbackground-image: linear-gradient(to right,#202829,#d4d3d9); \n`\nconst ElectroStyledLink = styled(StyledLink)`\nbackground:-webkit-linear-gradient(45deg,#202829 20%,#a8a8a8 80%);\nbackground-clip:text;\n-webkit-text-fill-color: transparent;\n`","import React from 'react';\nimport { HomeContentOnePiece, HomeContentElectronics } from '../Components/HomeContents';\n\n//home page only renders 2 of the home contents\nconst Home = () => {\n    return (\n        <div>\n            <HomeContentOnePiece />\n            <HomeContentElectronics />\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { OnePiece } from './Components/ProductCategories';\nimport { Electronics } from './Components/ProductCategories';\nimport Navbar from './Components/Navbar';\nimport Footer from './Components/Footer';\n\nimport { About } from './Pages';\nimport { Careers } from './Pages';\nimport { Home } from './Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/coolShop\" element={<Home />} />\n        <Route path=\"onepiece\" element={<OnePiece />} />\n        <Route path=\"electronics\" element={<Electronics />} />\n        <Route path=\"about\" element={<About />} />\n        <Route path=\"careers\" element={<Careers />} />\n      </Routes>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\nimport basketReducer from './BasketSlice';\n\n//export store.\nexport const Store = configureStore({\n    reducer:{\n        basket:basketReducer\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './globalStyle.scss'\nimport { Provider } from 'react-redux';\nimport { Store } from './State/Store';\nimport { BrowserRouter} from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={Store} >\n      <App/>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}